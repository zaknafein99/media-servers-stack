version: '3.1'
services:
  sonarr:
    image: 'lscr.io/linuxserver/sonarr:latest'
    container_name: sonarr
    environment:
      - PUID=13001
      - PGID=13000
      - UMASK=002
      - TZ="America/Montevideo"
    volumes:
      - '/mnt/d/Descargas/Media-Servers/config/sonarr-config:/config'
      - '/mnt/d/Descargas/Media-Servers/data:/data'
    ports:
      - '8989:8989'
    restart: unless-stopped
  radarr:
    image: 'lscr.io/linuxserver/radarr:latest'
    container_name: radarr
    environment:
      - PUID=13002
      - PGID=13000
      - UMASK=002
      - TZ="America/Montevideo"
    volumes:
      - '//mnt/d/Descargas/Media-Servers/config/radarr-config:/config'
      - '/mnt/d/Descargas/Media-Servers/data:/data'
    ports:
      - '7878:7878'
    restart: unless-stopped
  prowlarr:
    image: 'lscr.io/linuxserver/prowlarr:develop'
    container_name: prowlarr
    environment:
      - PUID=13006
      - PGID=13000
      - UMASK=002
      - TZ="America/Montevideo"
    volumes:
      - '/mnt/d/Descargas/Media-Servers/config/prowlarr-config:/config'
    ports:
      - '9696:9696'
    restart: unless-stopped
  plex:
    image: 'lscr.io/linuxserver/plex:latest'
    container_name: plex
    network_mode: host
    environment:
      - 'PUID=${UID}'
      - PGID=13000
      - VERSION=docker
      - PLEX_CLAIM=claim-yy15WX32hvdqXjFzXBPg
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - '/mnt/d/Descargas/Media-Servers/config/plex-config:/config'
      - '/mnt/d/Descargas/Media-Servers/data/media:/media'
    restart: unless-stopped
    runtime: nvidia
  jellyfin:
    image: ghcr.io/confusedpolarbear/jellyfin-intro-skipper
    container_name: jellyfin
    user: 1000:1000
    environment:
      - 'PUID=${UID}'
      - PGID=13000
      - UMASK=002
      - TZ="America/Montevideo"
      - NVIDIA_VISIBLE_DEVICES=all
    runtime: nvidia
    volumes:
      - '/mnt/d/Descargas/Media-Servers/config/jellyfin-config:/config'
      - '/mnt/d/Descargas/Media-Servers/data/media:/data'
    ports:
      - '8096:8096'
    restart: unless-stopped
  qbittorrent:
    image: 'lscr.io/linuxserver/qbittorrent:latest'
    container_name: qbittorrent
    environment:
      - PUID=13007
      - PGID=13000
      - UMASK=002
      - TZ="America/Montevideo"
      - WEBUI_PORT=8081
    volumes:
      - '/mnt/d/Descargas/Media-Servers/config/qbittorrent-config:/config'
      - '/mnt/d/Descargas/Media-Servers/data/torrents:/data/torrents'
    ports:
      - '8081:8081'
      - '6881:6881'
      - '6881:6881/udp'
    restart: unless-stopped
  bazarr:
    container_name: bazarr
    image: cr.hotio.dev/hotio/bazarr
    ports:
      - "6767:6767"
    environment:
      - PUID=1000 
      - PGID=1000
      - UMASK=002
      - TZ=Etc/UTC
    volumes:
      - '/home/isma/Descargas/Media-Servers/config/bazarr:/config'
      - '/mnt/d/Descargas/Media-Servers/data/media:/data'
    restart: unless-stopped
  # komga:
  #     image: gotson/komga
  #     container_name: komga
  #     volumes:
  #       - type: bind
  #         source: '/home/isma/Descargas/Media-Servers/config/komga'
  #         target: /config
  #       - type: bind
  #         source: '/mnt/d/Descargas/Media-Servers/data/comics'
  #         target: /data
  #       - type: bind
  #         source: /etc/timezone #alternatively you can use a TZ environment variable, like TZ=Europe/London
  #         target: /etc/timezone
  #         read_only: true
  #     ports:
  #       - 8080:8080
  #     user: "1000:1000"
  #     # remove the whole environment section if you don't need it
  #     environment:
  #       - PUID=1000 
  #       - PGID=1000
  #       - UMASK=002
  #       - TZ=Etc/UTC
  #     restart: unless-stopped
  # mylar3:
    # image: lscr.io/linuxserver/mylar3:latest
    # container_name: mylar3
    # environment:
    #   - PUID=1000
    #   - PGID=1000
    #   - TZ="America/Montevideo"
    # volumes:
    #   - /mnt/d/Descargas/Media-Servers/config/mylar:/config
    #   - /mnt/d/Descargas/Media-Servers/data/comics:/comics
    #   - /mnt/d/Descargas/Media-Servers/data/torrents:/downloads
    # ports:
    #   - 8090:8090
    # restart: unless-stopped
  # kodi:
  #   container_name: kodi
  #   image: linuxserver/kodi-headless
  #   restart: always
  #   environment:
  #     - PGID=1000
  #     - PUID=1000
  #     - TZ=America/Chicago
  #   volumes:
  #     - /home/isma/Descargas/Media-Servers/config/kodi:/config/.kodi
  #   ports:
  #     - 8082:8080
  #     - 9090:9090
  #     - "9777:9777/udp"
